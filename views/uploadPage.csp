<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <title>[[ title ]]</title>
    
    
    <link rel="stylesheet" type="text/css" href="/font/PT/PT-Astra-Sans/PT-Astra-Sans_Regular.css"  />
    
    <style type="text/css" media="screen, print">
    body { font-family: "PTAstraSansWebRegular", serif }
    
  </style>
    
</head>
<body>





  <div>
    <label for="uname">Названия травы: </label>
    <input type="text" id="hname" name="hname">
    <label for="uname">модель травы: </label>
    <input type="text" id="hmodel" name="hmodel">
  </div>
  
   <!-- Embed the HTMEditor --> <textarea id="htmeditor"></textarea> <script src="https://htmeditor.com/js/htmeditor.min.js"      htmeditor_textarea="htmeditor"      full_screen="no"      editor_height="480"     run_local="no"> </script> 
  
  
  <div>
    <button onclick="upload()"> загрузить </button>
  </div>




<script>

async function postData(url = '', data = {}) {
  // Default options are marked with *
  const response = await fetch(url, {
    method: 'POST', // *GET, POST, PUT, DELETE, etc.
    mode: 'cors', // no-cors, *cors, same-origin
    cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached
    credentials: 'same-origin', // include, *same-origin, omit
    headers: {
      'Content-Type': 'application/json'
      // 'Content-Type': 'application/x-www-form-urlencoded',
    },
    redirect: 'follow', // manual, *follow, error
    referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url
    body: JSON.stringify(data) // body data type must match "Content-Type" header
  });
  return response.json(); // parses JSON response into native JavaScript objects
}




function upload(){


var herbHame = document.getElementById('hname').value;
var herbModel = document.getElementById('hmodel').value;
var content = tinymce.get("htmeditor").getContent();


var url = "/admin/addHerb";

postData( url , { 'herbHame': herbHame, 'herbModel':herbModel, 'content':content })
  .then((data) => {
    console.log(data); // JSON data parsed by `response.json()` call
  });

}


</script>


   
</body>
</html> 
 
